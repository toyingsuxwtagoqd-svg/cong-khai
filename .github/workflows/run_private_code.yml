name: Run Private Code (YouTube)

on:
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: run-private-code
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout private repo (token, read-only)
        uses: actions/checkout@v4
        with:
          # Lưu "owner/private-repo" vào Secret: PRIVATE_REPO_REPOSITORY
          repository: ${{ secrets.PRIVATE_REPO_REPOSITORY }}
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          ref: main
          path: private-src
          fetch-depth: 1
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libsndfile1 fonts-dejavu-core

      - name: Install Python deps
        working-directory: private-src
        run: |
          python -m pip install --upgrade pip
          pip install --index-url https://download.pytorch.org/whl/cpu "torch==2.4.*" "torchaudio==2.4.*"
          pip install "TTS==0.22.0" "transformers==4.44.2" "huggingface_hub<0.34" pillow soundfile numpy requests tqdm underthesea vinorm google-genai
          pip install "google-api-python-client" "google-auth" "google-auth-oauthlib"

      - name: Run main.py (uploads to YouTube inside)
        working-directory: private-src
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}

          # --- Giới hạn thời lượng & “hints” cho sinh văn bản ---
          TARGET_AUDIO_SEC: "600"       # ~5 phút
          INIT_TARGET_CHARS: "5000"
          INIT_TARGET_SEC_HINT: "300"

          MODEL_DIR_SHARED: /home/runner/.cache/xtts   # <--- THÊM
          MODEL_REPO: capleaf/viXTTS
          MODEL_DIR: ./.hf_models/vn_model
          REF_WAV: assets/ref_vi.wav
          COQUI_TOS_AGREED: "1"

          TOP_K: "1"
          TOP_P: "0.30"
          R_PEN: "12.0"
          L_PEN: "1.05"
          CHUNK_MAX_CHARS: "200"
          SENTENCE_PAUSE_MS: "0"

          IMG_W: "1280"
          IMG_H: "720"
          SEED: "42"

          YOUTUBE_PRIVACY: public
          PYTHONUNBUFFERED: "1"
        run: |
          set -Eeuo pipefail
          if [ -f "src/main.py" ]; then
            python src/main.py
          else
            python main.py
          fi

      # Commit & PUSH 3 CSV về repo PRIVATE qua PAT (nếu checkout bằng PAT)
      - name: Commit & push state CSVs back to PRIVATE (PAT)
        if: ${{ steps.auth.outputs.mode == 'pat' }}
        working-directory: private-src
        env:
          PUSH_TOKEN_1: ${{ secrets.PRIVATE_REPO_PUSH_TOKEN }}
          PUSH_TOKEN_2: ${{ secrets.PRIVATE_REPO_TOKEN }}
          PRIVATE_REPO: ${{ steps.params.outputs.repo }}
          PRIVATE_REF: ${{ steps.params.outputs.ref }}
          DIR_FOUND: ${{ steps.find_script.outputs.dir }}
        run: |
          set -e
          TOKEN="${PUSH_TOKEN_1:-$PUSH_TOKEN_2}"
          [ -z "$TOKEN" ] && { echo "::warning::Không có token có quyền ghi. Bỏ qua commit."; exit 0; }

          FILES=""
          for f in tieudedalay.csv; do
            [ -f "$f" ] && FILES="$FILES $f"
            [ -n "$DIR_FOUND" ] && [ -f "$DIR_FOUND/$f" ] && FILES="$FILES $DIR_FOUND/$f"
          done
          [ -z "$FILES" ] && { echo "[INFO] Không có CSV để commit."; exit 0; }

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${TOKEN}@github.com/${PRIVATE_REPO}.git"

          CURBR=$(git rev-parse --abbrev-ref HEAD || true)
          [ "$CURBR" = "HEAD" ] && git checkout -b ci-state-update

          git add -- $FILES
          git diff --cached --quiet && { echo "[INFO] Không có thay đổi."; exit 0; }
          git commit -m "ci(state): update tieudedalay.csv"
          git push origin HEAD:"${PRIVATE_REF}"
          
      - name: Clean private sources
        if: always()
        run: rm -rf private-src
